package codigo;

import java.util.List;

import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import codigo.com.toedter.micalendar.TipoTrabajador;

import oracle.security.o5logon.d;

//prerequisito, partir con todos los trabajadores en activo
//seleccionar dos dias como minimo por semana
//se asignan los turnos por semana, es decir, no se puede asugnar 2 d√≠as, luego otros 2, luego otros 2 en la misma semana
public class GUI extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form NewJFrame
	 */
	public GUI() {
		initComponents();
		DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
		dtm.removeRow(0);
		dtm.removeRow(0);
	}

	private boolean pressed = false;
	private String tipo;

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jCheckBoxLimpieza = new javax.swing.JCheckBox();
		jCheckBoxRecepcion = new javax.swing.JCheckBox();
		jCheckBoxMantenimiento = new javax.swing.JCheckBox();
		jCheckBoxRestauracion = new javax.swing.JCheckBox();
		jButton1 = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Administrador");
		setResizable(false);

		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null }, { null, null, null, null } },
				new String[] { "Tipo", "Usuario", "DNI" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				jTable1MousePressed(evt);
			}
		});
		jScrollPane1.setViewportView(jTable1);

		jCheckBoxLimpieza.setText("Limpieza");
		jCheckBoxLimpieza.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBoxLimpiezaActionPerformed(evt);
			}
		});

		jCheckBoxRecepcion.setText("Recepcion");
		jCheckBoxRecepcion.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBoxRecepcionActionPerformed(evt);
			}
		});

		jCheckBoxMantenimiento.setText("Mantenimiento");
		jCheckBoxMantenimiento.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBoxMantenimientoActionPerformed(evt);
			}
		});

		jCheckBoxRestauracion.setText("Restauracion");
		jCheckBoxRestauracion.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBoxRestauracionActionPerformed(evt);
			}
		});

		jButton1.setText("Aceptar");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		jLabel1.setText("Selecciona un tipo de trabajador");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
						.createSequentialGroup().addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
										layout.createSequentialGroup().addGap(30, 30, 30).addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(layout.createSequentialGroup().addComponent(jCheckBoxLimpieza)
														.addGap(18, 18, 18).addComponent(jCheckBoxMantenimiento)
														.addGap(18, 18, 18).addComponent(jCheckBoxRestauracion)
														.addGap(12, 12, 12).addComponent(jCheckBoxRecepcion))))
								.addGroup(layout.createSequentialGroup().addGap(103, 103, 103).addComponent(jButton1,
										javax.swing.GroupLayout.PREFERRED_SIZE, 220,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(layout.createSequentialGroup().addGap(118, 118, 118).addComponent(jLabel1)))
						.addContainerGap(30, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(32, 32, 32).addComponent(jLabel1).addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jCheckBoxLimpieza).addComponent(jCheckBoxMantenimiento)
								.addComponent(jCheckBoxRestauracion).addComponent(jCheckBoxRecepcion))
						.addGap(18, 18, 18)
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18).addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(19, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void jTable1MousePressed(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
		uo = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 1);

	}

	String uo = "";

	private void jCheckBoxLimpiezaActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		pressed = !pressed;

		if (pressed) {
			jCheckBoxMantenimiento.setEnabled(!pressed);
			jCheckBoxRecepcion.setEnabled(!pressed);
			jCheckBoxRestauracion.setEnabled(!pressed);
			tipo = "limpieza";
			List<TransferTrabajador> l = BD.readAllTrabajadores(tipo);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			for (TransferTrabajador t : l) {
				String[] s = { t.tipo, t.nombre, t.dni };
				dtm.addRow(s);
			}
		} else {
			jCheckBoxMantenimiento.setEnabled(!pressed);
			jCheckBoxRecepcion.setEnabled(!pressed);
			jCheckBoxRestauracion.setEnabled(!pressed);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			int i = 0;
			while (i < dtm.getRowCount()) {
				dtm.removeRow(0);
			}
		}

	}

	private void jCheckBoxMantenimientoActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		pressed = !pressed;

		if (pressed) {
			jCheckBoxLimpieza.setEnabled(!pressed);
			jCheckBoxRecepcion.setEnabled(!pressed);
			jCheckBoxRestauracion.setEnabled(!pressed);
			tipo = "mantenimiento";
			List<TransferTrabajador> l = BD.readAllTrabajadores(tipo);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			for (TransferTrabajador t : l) {
				String[] s = { t.tipo, t.nombre, t.dni };
				dtm.addRow(s);
			}
		} else {
			jCheckBoxLimpieza.setEnabled(!pressed);
			jCheckBoxRecepcion.setEnabled(!pressed);
			jCheckBoxRestauracion.setEnabled(!pressed);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			int i = 0;
			while (i < dtm.getRowCount()) {
				dtm.removeRow(0);
			}
		}
	}

	private void jCheckBoxRestauracionActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		pressed = !pressed;

		if (pressed) {
			jCheckBoxMantenimiento.setEnabled(!pressed);
			jCheckBoxRecepcion.setEnabled(!pressed);
			jCheckBoxLimpieza.setEnabled(!pressed);
			tipo = "restauracion";
			List<TransferTrabajador> l = BD.readAllTrabajadores(tipo);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			for (TransferTrabajador t : l) {
				String[] s = { t.tipo, t.nombre, t.dni };
				dtm.addRow(s);
			}
		} else {
			jCheckBoxMantenimiento.setEnabled(!pressed);
			jCheckBoxRecepcion.setEnabled(!pressed);
			jCheckBoxLimpieza.setEnabled(!pressed);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			int i = 0;
			while (i < dtm.getRowCount()) {
				dtm.removeRow(0);
			}
		}

	}

	private void jCheckBoxRecepcionActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		pressed = !pressed;

		if (pressed) {
			jCheckBoxMantenimiento.setEnabled(!pressed);
			jCheckBoxLimpieza.setEnabled(!pressed);
			jCheckBoxRestauracion.setEnabled(!pressed);
			tipo = "recepcion";
			List<TransferTrabajador> l = BD.readAllTrabajadores(tipo);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			for (TransferTrabajador t : l) {
				String[] s = { t.tipo, t.nombre, t.dni };
				dtm.addRow(s);
			}
		} else {
			jCheckBoxMantenimiento.setEnabled(!pressed);
			jCheckBoxLimpieza.setEnabled(!pressed);
			jCheckBoxRestauracion.setEnabled(!pressed);
			DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
			int i = 0;
			while (i < dtm.getRowCount()) {
				dtm.removeRow(0);
			}
		}
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		if (uo.equals("")) {
			JOptionPane.showMessageDialog(new JFrame(), "Selecciona una tupla");
		} else {
			JOptionPane.showMessageDialog(new JFrame(), "Asigna el turno a " + uo);
			setVisible(false);
			;
			gui2 = new GUI2();
			gui2.miJCalendar1.uo = uo;
			gui2.miJCalendar1.tipo = tipo;
			gui2.setVisible(true);
		}
	}
	
	private GUI2 gui2;

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new GUI().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JCheckBox jCheckBoxLimpieza;
	private javax.swing.JCheckBox jCheckBoxMantenimiento;
	private javax.swing.JCheckBox jCheckBoxRecepcion;
	private javax.swing.JCheckBox jCheckBoxRestauracion;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	// End of variables declaration

}
