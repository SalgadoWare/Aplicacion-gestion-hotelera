/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carlos_historias_4_5_6_7;

import java.time.LocalDate;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import jdbc.BD;

/**
 *
 * @author carlos
 */
public class DarAltaAlimentosYBebidasDialog extends javax.swing.JDialog {

    /**
     * Creates new form DarAltaAlimentosYBebidasDialog
     */
    private DarAltaAlimentosYBebidasDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bAceptarCP = new javax.swing.JButton();
        bCopiarATodos = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        checkRestaurante = new javax.swing.JCheckBox();
        checkCafeteria = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        checkMinibar = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        labelOtroTipo = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfOtroTipo = new javax.swing.JTextField();
        tfPrecioMinibar = new javax.swing.JTextField();
        cbTipo = new javax.swing.JComboBox<>();
        tfPrecioCafeteria = new javax.swing.JTextField();
        bCancelar = new javax.swing.JButton();
        tfPrecioRestaurante = new javax.swing.JTextField();
        tfPrecioTodos = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        bAceptarCP.setBackground(new java.awt.Color(43, 110, 232));
        bAceptarCP.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bAceptarCP.setForeground(new java.awt.Color(255, 255, 255));
        bAceptarCP.setText("Aceptar");
        bAceptarCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAceptarCPActionPerformed(evt);
            }
        });

        bCopiarATodos.setText("Copiar a todos");
        bCopiarATodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCopiarATodosActionPerformed(evt);
            }
        });

        jLabel6.setText("Aplicar a:");

        checkRestaurante.setText("Restaurante");
        checkRestaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkRestauranteActionPerformed(evt);
            }
        });

        checkCafeteria.setText("Cafeteria");
        checkCafeteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCafeteriaActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        checkMinibar.setText("Minibar");
        checkMinibar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMinibarActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo");

        jLabel7.setText("Precio restaurante:");

        labelOtroTipo.setText("Otro tipo");

        jLabel9.setText("Precio cafater√≠a:");

        jLabel8.setText("Precio minibar:");

        tfPrecioMinibar.setEnabled(false);

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Otro..." }));
        cbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoActionPerformed(evt);
            }
        });

        tfPrecioCafeteria.setEnabled(false);

        bCancelar.setBackground(new java.awt.Color(100, 100, 100));
        bCancelar.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bCancelar.setForeground(new java.awt.Color(255, 255, 255));
        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        tfPrecioRestaurante.setEnabled(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setToolTipText("");

        jLabel10.setText("Precio para todos:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addGap(125, 125, 125)
                        .addComponent(jLabel2)
                        .addGap(145, 145, 145)
                        .addComponent(labelOtroTipo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfOtroTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(bCancelar)
                        .addGap(39, 39, 39)
                        .addComponent(bAceptarCP))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkCafeteria)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel9)
                                .addGap(23, 23, 23)
                                .addComponent(tfPrecioCafeteria, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkMinibar)
                                .addGap(53, 53, 53)
                                .addComponent(jLabel8)
                                .addGap(29, 29, 29)
                                .addComponent(tfPrecioMinibar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkRestaurante)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel7)
                                .addGap(6, 6, 6)
                                .addComponent(tfPrecioRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bCopiarATodos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfPrecioTodos)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(labelOtroTipo)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(tfOtroTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jLabel6)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(checkRestaurante)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(jLabel7))
                                .addComponent(tfPrecioRestaurante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(checkCafeteria)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(jLabel9))
                                .addComponent(tfPrecioCafeteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(checkMinibar))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(jLabel8))
                                .addComponent(tfPrecioMinibar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(15, 15, 15)
                        .addComponent(tfPrecioTodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(bCopiarATodos)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bCancelar)
                    .addComponent(bAceptarCP))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAceptarCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAceptarCPActionPerformed
        boolean isOtroSeleccionado = cbTipo.getSelectedItem().toString().equals("Otro...");
        
        //Comprobamos que el nombre no est√° vac√≠o
        if(getNombre().isEmpty()){
            JOptionPane.showMessageDialog(null,"Has de introducir un valor para el campo Nombre", "Campo Nombre vac√≠o",JOptionPane.WARNING_MESSAGE);
        }
        //Si es otro tipo y no indica valor para ese tipo
        else if(isOtroSeleccionado && tfOtroTipo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Has de introducir un valor para el campo Otro tipo", "Campos Otro tipo vac√≠o",JOptionPane.WARNING_MESSAGE);
        }
        //No hay ningun lugar marcado
        else if(!isLugarRestaurante() && !isLugarCafeteria() && !isLugarMinibar()){
            JOptionPane.showMessageDialog(null,"Has de marcar al menos un lugar para el que dar de alta el alimento:\nRestaurante |¬†Cafeter√≠a | Minibar", "Ning√∫n lugar marcado",JOptionPane.WARNING_MESSAGE);
        }
        //Si falta precio para algun lugar marcado o no es un valor numerico
        else if(isLugarRestaurante() && getPrecioRestaurante()==null){
            JOptionPane.showMessageDialog(null,"Falta indicar el precio para el restaurante \no tiene un valor no num√©rico", "Precio restaurante err√≥neo",JOptionPane.WARNING_MESSAGE);
        }
        else if(isLugarCafeteria()&& getPrecioCafeteria()==null){
            JOptionPane.showMessageDialog(null,"Falta indicar el precio para la cafeter√≠a \no tiene un valor no num√©rico", "Precio cafeter√≠a err√≥neo",JOptionPane.WARNING_MESSAGE);
        }
        else if(isLugarMinibar()&& getPrecioMinibar()==null){
            JOptionPane.showMessageDialog(null,"Falta indicar el precio para el minibar \no tiene un valor no num√©rico", "Precio minibar err√≥neo",JOptionPane.WARNING_MESSAGE);
        }
        //Si el precio para algun lugar marcado es menor de <= 0
        else if(isLugarRestaurante() && getPrecioRestaurante() <= 0){
            JOptionPane.showMessageDialog(null,"El valor del precio en el restaurante ha de ser mayor de 0", "Precio restaurante err√≥neo",JOptionPane.WARNING_MESSAGE);
        }
        else if(isLugarCafeteria()&& getPrecioCafeteria()<= 0){
            JOptionPane.showMessageDialog(null,"El valor del precio en la cafeter√≠a ha de ser mayor de 0", "Precio cafeter√≠a err√≥neo",JOptionPane.WARNING_MESSAGE);
        }
        else if(isLugarMinibar()&& getPrecioMinibar()<= 0){
            JOptionPane.showMessageDialog(null,"El valor del precio en el minibar ha de ser mayor de 0", "Precio minibar err√≥neo",JOptionPane.WARNING_MESSAGE);
        }
        //Comprobamos que no existe en la BD un producto con la misma descripci√≥n en la misma fecha de hoy en el restaurante
        else if(isLugarRestaurante() && BD.isAlimentoConLaMismaDescripcionYMismaFechaEnLaBD(getNombre(),getTipo(),"restaurante",getFechaAlta())){
            JOptionPane.showMessageDialog(null,"Ya existe un alimento con la misma descripci√≥n\n dado de alta en la fecha actual para el restaurante", "No se puede dar de alta el alimento",JOptionPane.WARNING_MESSAGE);
        }
        else if(isLugarCafeteria()&& BD.isAlimentoConLaMismaDescripcionYMismaFechaEnLaBD(getNombre(),getTipo(),"cafeteria",getFechaAlta())){
            JOptionPane.showMessageDialog(null,"Ya existe un alimento con la misma descripci√≥n\n dado de alta en la fecha actual para la cafeter√≠a", "No se puede dar de alta el alimento",JOptionPane.WARNING_MESSAGE);
        }
        else if(isLugarMinibar() && BD.isAlimentoConLaMismaDescripcionYMismaFechaEnLaBD(getNombre(),getTipo(),"minibar",getFechaAlta())){
            JOptionPane.showMessageDialog(null,"Ya existe un alimento con la misma descripci√≥n\n dado de alta en la fecha actual para el minibar", "No se puede dar de alta el alimento",JOptionPane.WARNING_MESSAGE);
        }
        
        else{//Si los valores est√°n bien
            POK=true;//Indicamos que se ha pulsado el boton de Aceptar
            this.setVisible(false);
        }
   
    }//GEN-LAST:event_bAceptarCPActionPerformed

    private void bCopiarATodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCopiarATodosActionPerformed
        //Si no es un valor correcto lanzamos un mensaje
        if(getPrecioTodos()==null){
            JOptionPane.showMessageDialog(null,"Falta indicar el precio para el campo \"Precio para todos\" \no tiene un valor no num√©rico", "Precio para todos err√≥neo",JOptionPane.WARNING_MESSAGE);
            return;
        }
        // Tenemos que ponerle el precio del tf a los otros 3 tf
        String precio = tfPrecioTodos.getText();
        tfPrecioRestaurante.setText(precio);
        tfPrecioCafeteria.setText(precio);
        tfPrecioMinibar.setText(precio);
    }//GEN-LAST:event_bCopiarATodosActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_bCancelarActionPerformed

    private void cbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoActionPerformed
        if(cbTipo.getSelectedItem()==null)
            return;

        //Si se ha selecciondo "Otro..." ponemos visible los 2 campos
        if(cbTipo.getSelectedItem().toString().equals("Otro...")){
            labelOtroTipo.setVisible(true);
            tfOtroTipo.setVisible(true);
        }else{
            labelOtroTipo.setVisible(false);
            tfOtroTipo.setVisible(false);
        }
           
    }//GEN-LAST:event_cbTipoActionPerformed

    private void checkRestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkRestauranteActionPerformed
        //Si esta activo activamos tambien el tf
        if(checkRestaurante.isSelected())
            tfPrecioRestaurante.setEnabled(true);
        else
            tfPrecioRestaurante.setEnabled(false);
    }//GEN-LAST:event_checkRestauranteActionPerformed

    private void checkCafeteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCafeteriaActionPerformed
        //Si esta activo activamos tambien el tf
        if(checkCafeteria.isSelected())
            tfPrecioCafeteria.setEnabled(true);
        else
            tfPrecioCafeteria.setEnabled(false);
    }//GEN-LAST:event_checkCafeteriaActionPerformed

    private void checkMinibarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMinibarActionPerformed
        //Si esta activo activamos tambien el tf
        if(checkMinibar.isSelected())
            tfPrecioMinibar.setEnabled(true);
        else
            tfPrecioMinibar.setEnabled(false);
    }//GEN-LAST:event_checkMinibarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DarAltaAlimentosYBebidasDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DarAltaAlimentosYBebidasDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DarAltaAlimentosYBebidasDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DarAltaAlimentosYBebidasDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DarAltaAlimentosYBebidasDialog dialog = new DarAltaAlimentosYBebidasDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Codigo mio
    private boolean POK;//Variable ¬øpuls√≥ OK?
    
    public DarAltaAlimentosYBebidasDialog(){
        this(null,true);//Ventana modal
    }
    
    public boolean showDialog(){
        // Inicializaci√≥n de la interfaz
        iniciarComponentesMio();
        
        POK=false;
        setVisible(true);//Mostramos la ventana
        //Es un codigo bloqueante
        //Como la ventana es modal se queda bloqueando la ventana anterior
        //La ventana antigua queda bloqueada porque el metodo setVisible no termina
        return POK;//Aqui POK vale true si el usuario pulso el boton OK y false si pulso Cancelar o cerro la ventana
    }
    
    private void iniciarComponentesMio(){
        tfNombre.setText("");
        tfOtroTipo.setText("");
        tfPrecioCafeteria.setText("");
        tfPrecioMinibar.setText("");
        tfPrecioRestaurante.setText("");
        tfPrecioTodos.setText("");
        
        checkCafeteria.setSelected(false);
        checkMinibar.setSelected(false);
        checkRestaurante.setSelected(false);
        
        tfPrecioCafeteria.setEnabled(false);
        tfPrecioMinibar.setEnabled(false);
        tfPrecioRestaurante.setEnabled(false);
        
        labelOtroTipo.setVisible(false);
        tfOtroTipo.setVisible(false);
        
        inicializarTipo();
    }
    
    private void inicializarTipo(){
        //Borramos todos los items del cb (si habia)
        cbTipo.removeAllItems();
        //A√±adimos los tipos de alimentos (me los da la consulta)
        List<String> listaTipos = BD.dameTiposAlimentos();
        for (String tipo : listaTipos) {
            cbTipo.addItem(tipo);
        }
        //A√±adimos "Otro..."
        cbTipo.addItem("Otro...");
    }
    
    public String getNombre(){
        return tfNombre.getText();
    }
    
    public String getTipo(){
        String tipo = cbTipo.getSelectedItem().toString();
        //Si esta seleccionado "Otro..." tenemos que retornar el valor del tfOtroTipo
        if(tipo.equals("Otro..."))
            return tfOtroTipo.getText();
        else
            return tipo;
    }
    
    public LocalDate getFechaAlta(){
        return LocalDate.now();
    }
    
    public boolean isLugarRestaurante(){
        return checkRestaurante.isSelected();
    }
    
    public boolean isLugarCafeteria(){
        return checkCafeteria.isSelected();
    }
    
    public boolean isLugarMinibar(){
        return checkMinibar.isSelected();
    }
    
    public Double getPrecioRestaurante(){
        String texto = tfPrecioRestaurante.getText();
        if(texto.isEmpty())//Si esta vacio devolvemos null
            return null;
        
        Double precio;
        
        try{
            precio = Double.parseDouble(texto);
        }catch(NumberFormatException e){
            //Si llegamos aqui es que no habia un numero por lo que retornamos null
            return null;
        }
        
        return precio;
    }
       
    
    public Double getPrecioCafeteria(){
        String texto = tfPrecioCafeteria.getText();
        if(texto.isEmpty())//Si esta vacio devolvemos null
            return null;
        
        Double precio;
        
        try{
            precio = Double.parseDouble(texto);
        }catch(NumberFormatException e){
            //Si llegamos aqui es que no habia un numero por lo que retornamos null
            return null;
        }
        
        return precio;
    }
    
    public Double getPrecioMinibar(){
        String texto = tfPrecioMinibar.getText();
        if(texto.isEmpty())//Si esta vacio devolvemos null
            return null;
        
        Double precio;
        
        try{
            precio = Double.parseDouble(texto);
        }catch(NumberFormatException e){
            //Si llegamos aqui es que no habia un numero por lo que retornamos null
            return null;
        }
        
        return precio;
    }
    
    public Double getPrecioTodos(){
        String texto = tfPrecioTodos.getText();
        if(texto.isEmpty())//Si esta vacio devolvemos null
            return null;
        
        Double precio;
        
        try{
            precio = Double.parseDouble(texto);
        }catch(NumberFormatException e){
            //Si llegamos aqui es que no habia un numero por lo que retornamos null
            return null;
        }
        
        return precio;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAceptarCP;
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bCopiarATodos;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JCheckBox checkCafeteria;
    private javax.swing.JCheckBox checkMinibar;
    private javax.swing.JCheckBox checkRestaurante;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelOtroTipo;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfOtroTipo;
    private javax.swing.JTextField tfPrecioCafeteria;
    private javax.swing.JTextField tfPrecioMinibar;
    private javax.swing.JTextField tfPrecioRestaurante;
    private javax.swing.JTextField tfPrecioTodos;
    // End of variables declaration//GEN-END:variables
}
