/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carlos.historias_1_2_3;

import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdbc.BD;
import util.Util;

/**
 *
 * @author carlos
 */
public class ConsultarPromocionesSuplementosDialog extends javax.swing.JDialog {
 
    
    /**
     * Creates new form CrearPromocionesDialog
     */
    private ConsultarPromocionesSuplementosDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        iniciarComponentesMio();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFechas = new javax.swing.ButtonGroup();
        rbFechaUnica = new javax.swing.JRadioButton();
        rbRangoDeFechas = new javax.swing.JRadioButton();
        labelFechaIni = new javax.swing.JLabel();
        labelFechaFin = new javax.swing.JLabel();
        bVolver = new javax.swing.JButton();
        dcFechaIni = new com.toedter.calendar.JDateChooser();
        dcFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        checkPromociones = new javax.swing.JCheckBox();
        checkSuplementos = new javax.swing.JCheckBox();
        tbMostrar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultar promociones y suplementos");
        setResizable(false);

        bgFechas.add(rbFechaUnica);
        rbFechaUnica.setSelected(true);
        rbFechaUnica.setText("Fecha Única");
        rbFechaUnica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFechaUnicaActionPerformed(evt);
            }
        });

        bgFechas.add(rbRangoDeFechas);
        rbRangoDeFechas.setText("Rango de Fechas");
        rbRangoDeFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRangoDeFechasActionPerformed(evt);
            }
        });

        labelFechaIni.setText("Fecha");

        labelFechaFin.setText("Fecha Fin");

        bVolver.setBackground(new java.awt.Color(43, 110, 232));
        bVolver.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bVolver.setForeground(new java.awt.Color(255, 255, 255));
        bVolver.setText("Volver");
        bVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVolverActionPerformed(evt);
            }
        });

        dcFechaIni.setDateFormatString("dd/MM/yyyy");

        dcFechaFin.setDateFormatString("dd/MM/yyyy");

        jLabel1.setText("Consultar:");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Día", "Porcentaje", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        checkPromociones.setText("Promociones");
        checkPromociones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkPromocionesActionPerformed(evt);
            }
        });

        checkSuplementos.setText("Suplementos");
        checkSuplementos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkSuplementosActionPerformed(evt);
            }
        });

        tbMostrar.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        tbMostrar.setText("Mostrar");
        tbMostrar.setEnabled(false);
        tbMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(rbFechaUnica)
                        .addGap(53, 53, 53)
                        .addComponent(rbRangoDeFechas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(labelFechaIni))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dcFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkPromociones)
                                    .addComponent(checkSuplementos))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbMostrar)
                                    .addComponent(dcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelFechaFin)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(bVolver)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbFechaUnica)
                    .addComponent(rbRangoDeFechas))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFechaIni)
                    .addComponent(labelFechaFin))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkPromociones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkSuplementos)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tbMostrar)
                        .addGap(27, 27, 27)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bVolver)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbRangoDeFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRangoDeFechasActionPerformed
        //Si está seleccionado tenemos que cambiar la label de "Día" por "Fecha Inicio"
        //y activar el otro DateChooser
        labelFechaIni.setText("Fecha Inicio");
        dcFechaFin.setVisible(true);
        labelFechaFin.setVisible(true);
    }//GEN-LAST:event_rbRangoDeFechasActionPerformed

    private void rbFechaUnicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFechaUnicaActionPerformed
        //Si está seleccionado tenemos que cambiar la label de "Fecha Inicio" por "Día"
        //y desactivar el otro DateChooser
        labelFechaIni.setText("Fecha");
        dcFechaFin.setVisible(false);
         labelFechaFin.setVisible(false);
    }//GEN-LAST:event_rbFechaUnicaActionPerformed

    private void bVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVolverActionPerformed
        POK=true;//Indicamos que se ha pulsado el boton de Aceptar
        this.setVisible(false);
    }//GEN-LAST:event_bVolverActionPerformed

    private void checkSuplementosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkSuplementosActionPerformed
        compruebaActivarBoton();
    }//GEN-LAST:event_checkSuplementosActionPerformed
    
    private void compruebaActivarBoton(){
        if(checkPromociones.isSelected() || checkSuplementos.isSelected())
            tbMostrar.setEnabled(true);
        else
            tbMostrar.setEnabled(false);
    }
    
    private void tbMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMostrarActionPerformed
        if(tbMostrar.isSelected()){
            //Comprobamos que haya fechas en los campos
            java.util.Date fechaIni=dcFechaIni.getDate();//Si no hay valor en la casilla devuelve null
            java.util.Date fechaFin = dcFechaFin.getDate();//Si no hay valor en la casilla (bien porque esta oculta o porque el usuario no le da valor) devuelve null
            boolean esFechaUnica = rbFechaUnica.isSelected();
            boolean esRangoDeFechas = rbRangoDeFechas.isSelected(); 
            
            //Funcion auxiliar --> boolean comprobarFechas(boolean esFechaUnica, boolean esRangoDeFechas, java.util.Date fechaIni, java.util.Date fechaFin) 
            //Devuelve true si todo esta bien --> Si hay algo mal devuelve false
            //if(!comprobarFechas) return;
            if(esFechaUnica && fechaIni==null){
                JOptionPane.showMessageDialog(null,"Has de introducir un valor para el campo Fecha", "Campo Fecha vacío",JOptionPane.WARNING_MESSAGE);
                tbMostrar.setSelected(false);
                return;
            }
            else if(esRangoDeFechas && fechaIni==null && fechaFin==null){
                JOptionPane.showMessageDialog(null,"Has de introducir un valor para los campos Fecha Inicio y Fecha Fin", "Campos Fecha vacíos",JOptionPane.WARNING_MESSAGE);
                tbMostrar.setSelected(false);
                return;
            }
            else if(esRangoDeFechas && fechaIni==null){
                JOptionPane.showMessageDialog(null,"Has de introducir un valor para el campo Fecha Inicio", "Campo Fecha Inicio vacío",JOptionPane.WARNING_MESSAGE);
                tbMostrar.setSelected(false);
                return;
            }
            else if(esRangoDeFechas && fechaFin==null){
                JOptionPane.showMessageDialog(null,"Has de introducir un valor para el campo Fecha Fin", "Campo Fecha Fin vacío",JOptionPane.WARNING_MESSAGE);
                tbMostrar.setSelected(false);
                return;
            }
            //comprobamos que las fechas son correctas
            else if(esRangoDeFechas && fechaIni.compareTo(fechaFin) > 0){
                JOptionPane.showMessageDialog(null,"La fecha introducida en FechaFin no puede ser anterior a la introducida en FechaInicio", "Rango de fechas erróneo",JOptionPane.WARNING_MESSAGE);
                tbMostrar.setSelected(false);
                return;
            }
            
            //Si llegamos aqui es que las fechas son correctas
            
            //Deshabilito los checkBox y JDateChooser
            setEnabledCheckBoxYJDateChooserYRadioButton(false);
            
            LocalDate Ini; LocalDate Fin;
            if(esFechaUnica){
                Ini = fechaIni.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                Fin = fechaIni.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            }else{
                Ini = fechaIni.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                Fin = fechaFin.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            }

            //Necesito pedir a la BD que me devuelva todas los dias entre las fechas indicadas por el usuario que tengan
            //algun suplemento o alguna promocion o ambas
            //Los dias que no tengan nada los mostraremos igual en la tabla   
            List<Extra> listaExtras = new LinkedList<>();
            
            if(checkPromociones.isSelected() && checkSuplementos.isSelected()){
                //Mostramos las promociones y los suplementos
                listaExtras=BD.damePromocionesYSuplementosEntreFechas(Ini, Fin);
            }
            else if(checkPromociones.isSelected()){
                //Mostramos solo las promociones
                listaExtras=BD.damePromocionesEntreFechas(Ini, Fin);
            }
            else if(checkSuplementos.isSelected()){
                //Mostramos solo los suplementos
                listaExtras=BD.dameSuplementosEntreFechas(Ini, Fin);
            }
            
            //Añadimos a la tabla la fecha inicio del extra y su porcentaje y tipo
            //añadirValoresALaTablaPrueba(listaExtras);
            añadirValoresALaTabla(listaExtras,Ini,Fin);
            
        }
        //Si el boton se desmarca
        else{
            //Vaciar la tabla
            inicializarTabla();
            //Habilito los checkBox y JDateChooser
            setEnabledCheckBoxYJDateChooserYRadioButton(true);
        }
    }//GEN-LAST:event_tbMostrarActionPerformed

    public void añadirValoresALaTabla(List<Extra> listaExtras, LocalDate Ini, LocalDate Fin){ 
        DefaultTableModel DTM = (DefaultTableModel) tabla.getModel();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        
        //Iteramos por los dias desde Ini hasta Fin(incluido)
        for (LocalDate dia_actual = Ini; dia_actual.isBefore(Fin) || dia_actual.isEqual(Fin); dia_actual = dia_actual.plusDays(1)){
            
            boolean existe_extra_dia_actual = false;//Guarda si hay algun extra para el dia actual o no
            String dia = dtf.format(dia_actual);//dia actual formateado
            
            //Para cada dia, tenemos que iterar por todos los extras de la lista
            for (Extra extra : listaExtras) {
                //Si el dia actual está dentro del rango de fechas de un extra
                if(Util.fechasCaenDentroDelRango(dia_actual, dia_actual, extra.fechaIni, extra.fechaFin)){
                    //Tenemos que añadir una tupla a la tabla con el valor del dia actual y con el porcentaje y el tipo del extra
                    String porcentaje = String.valueOf(extra.porcentaje);
                    String tipo = extra.tipo;
                    String[] s = {dia, porcentaje, tipo};
                    añadirFila(DTM, s);
                    
                    existe_extra_dia_actual=true;//Ha coincidido que el dia actual tiene un extra
                }
            }
            
            //Si no hubo ningun extra para el dia actual, tenemos que añadir una tupla con el dia y los demas atributos vacios
            if(!existe_extra_dia_actual){
                String[] s = {dia,"",""};
                añadirFila(DTM, s);
            }
        
        }
  
        //No permitimos que se editen las tuplas
        tabla.setDefaultEditor(Object.class, null);
    }
    
    public void añadirValoresALaTablaPrueba(List<Extra> listaExtras){ 
        DefaultTableModel DTM = (DefaultTableModel) tabla.getModel();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        for (Extra extra : listaExtras) {
            String inicial = dtf.format(extra.fechaIni);
            String porcentaje = String.valueOf(extra.porcentaje);
            String tipo = extra.tipo;
            String[] s = {inicial, porcentaje, tipo};
            añadirFila(DTM, s);
        }
        //No permitimos que se editen las tuplas
        tabla.setDefaultEditor(Object.class, null);
    }
    
    
    private void setEnabledCheckBoxYJDateChooserYRadioButton(boolean b){
        //Deshabilito los checkBox y JDateChooser
        checkSuplementos.setEnabled(b);
        checkPromociones.setEnabled(b);
        dcFechaIni.setEnabled(b);
        dcFechaFin.setEnabled(b);
        rbFechaUnica.setEnabled(b);
        rbRangoDeFechas.setEnabled(b);
    }
    
    
    private void checkPromocionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkPromocionesActionPerformed
        compruebaActivarBoton();
    }//GEN-LAST:event_checkPromocionesActionPerformed
                          
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarPromocionesSuplementosDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarPromocionesSuplementosDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarPromocionesSuplementosDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarPromocionesSuplementosDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConsultarPromocionesSuplementosDialog dialog = new ConsultarPromocionesSuplementosDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    
    // Codigo mio
    private boolean POK;//Variable ¿pulsó OK?
    
    public ConsultarPromocionesSuplementosDialog(){
        this(null,true);//Ventana modal
    }
    
    public boolean showDialog(){
        // Inicialización de la interfaz
        rbFechaUnica.setSelected(true);
        labelFechaIni.setText("Fecha");
        dcFechaFin.setVisible(false);
        labelFechaFin.setVisible(false);
        
        dcFechaIni.setDate(null);
        dcFechaFin.setDate(null);
        
        //Habilito los checkBox y JDateChooser
        setEnabledCheckBoxYJDateChooserYRadioButton(true);
        
        checkPromociones.setSelected(false);
        checkSuplementos.setSelected(false);
        tbMostrar.setSelected(false);
        tbMostrar.setEnabled(false);
        
        

        inicializarTabla();
        
        POK=false;
        setVisible(true);//Mostramos la ventana
        //Es un codigo bloqueante
        //Como la ventana es modal se queda bloqueando la ventana anterior
        //La ventana antigua queda bloqueada porque el metodo setVisible no termina
        return POK;//Aqui POK vale true si el usuario pulso el boton OK y false si pulso Cancelar o cerro la ventana
    }
    
    public void inicializarTabla(){
        tabla.setModel(new DefaultTableModel());//Modificamos el modelo de la tabla para poder añadir y borrar elementos
        DefaultTableModel DTM = (DefaultTableModel) tabla.getModel();
        //tabla.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);//Solo podemos seleccionar una cancion a la vez
        //Metemos las columnas, indicando la cabecera
        añadirColumnas(DTM);
    }
    
    public void iniciarComponentesMio(){
        dcFechaIni.setMinSelectableDate(Date.valueOf(LocalDate.now()));
        dcFechaFin.setMinSelectableDate(Date.valueOf(LocalDate.now()));
    }
    
    /**
     * Establece el numero de columnas de la tabla, así como el valor de las cabeceras
     * @param DTM 
     */
    public void añadirColumnas(javax.swing.table.DefaultTableModel DTM){
        DTM.addColumn("Día");
        DTM.addColumn("Porcentaje");
        DTM.addColumn("Tipo");
    }
     /**
      * Recibe como parametros el DTM de la tabla a la que quieres añadir las columnas, y como demás parámetros, 
      * un número indefinido de vectores de String que van a ser las tuplas de la tabla. 
      * Los vectores han de ser del mismo tamaño que el número de columnas de la tabla
      * @param DTM modelo de la tabla
      * @param s tuplas
      */
    public void añadirFila(javax.swing.table.DefaultTableModel DTM, String[] s){
        DTM.addRow(s);
    }
    
    /**
     * Devuelve cierto si la promocion se aplica a una única fecha (a un solo día) y falso si se aplica a un rango de fechas
     * @return 
     */
    public boolean isFechaUnica(){
        return rbFechaUnica.isSelected();
    }
    
    /**
     * Devuelve la fecha unica si esta seleccionada el modo fecha unica y una excepcion en caso contrario
     * @return LocalDate con la fecha
     * @throws IllegalAccessException 
     */
    public LocalDate getFechaUnica() throws Exception{
        if(isFechaUnica()){
            java.util.Date fechaDate = dcFechaIni.getDate();
            return fechaDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        }
        else throw new Exception("Fecha Unica no estaba seleccionado");
    }
    
    /**
     * Devuelve un vector con dos fechas si está seleccionado el modo Rango de fechas y una excepcion en caso contrario
     * En la posicion 0 del vector tenemos la Fecha de Inicio y en la posicion 1 la Fecha de Fin
     * @return vector de LocalDate con dos posiciones, la 0 la fecha de Inicio y la 1 la Fecha de Fin
     * @throws IllegalAccessException 
     */
    public LocalDate[] getFechasIniFin() throws Exception{
        if(isFechaUnica())
            throw new Exception("Rango de Fechas no estaba seleccionado");
        
        LocalDate[] vectorLocalDate = new LocalDate[2];
        vectorLocalDate[0]=dcFechaIni.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        vectorLocalDate[1]=dcFechaFin.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        return vectorLocalDate;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bVolver;
    private javax.swing.ButtonGroup bgFechas;
    private javax.swing.JCheckBox checkPromociones;
    private javax.swing.JCheckBox checkSuplementos;
    private com.toedter.calendar.JDateChooser dcFechaFin;
    private com.toedter.calendar.JDateChooser dcFechaIni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFechaFin;
    private javax.swing.JLabel labelFechaIni;
    private javax.swing.JRadioButton rbFechaUnica;
    private javax.swing.JRadioButton rbRangoDeFechas;
    private javax.swing.JTable tabla;
    private javax.swing.JToggleButton tbMostrar;
    // End of variables declaration//GEN-END:variables
}
